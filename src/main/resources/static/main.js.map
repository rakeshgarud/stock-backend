{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/activity/activity.component.html","webpack:///./src/app/activity/activity.component.ts","webpack:///./src/app/all-load-data/all-load-data.component.css","webpack:///./src/app/all-load-data/all-load-data.component.html","webpack:///./src/app/all-load-data/all-load-data.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/equity/equity.component.css","webpack:///./src/app/equity/equity.component.html","webpack:///./src/app/equity/equity.component.ts","webpack:///./src/app/intra-day/intra-day.component.html","webpack:///./src/app/intra-day/intra-day.component.ts","webpack:///./src/app/list-stocks/list-stocks.component.html","webpack:///./src/app/list-stocks/list-stocks.component.ts","webpack:///./src/app/list-stocks/list.stock.css","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/premium-decay/premium-decay.component.css","webpack:///./src/app/premium-decay/premium-decay.component.html","webpack:///./src/app/premium-decay/premium-decay.component.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/stock.service.ts","webpack:///./src/app/stock-option-chain/stock-option-chain.component.css","webpack:///./src/app/stock-option-chain/stock-option-chain.component.html","webpack:///./src/app/stock-option-chain/stock-option-chain.component.ts","webpack:///./src/app/yesterDay-today/yesterDay-today.css","webpack:///./src/app/yesterDay-today/yesterDay-today.html","webpack:///./src/app/yesterDay-today/yesterDay-today.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"stock-pan\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 \\\">\\n      <h2> FII's data.</h2>\\n    </div>\\n    <!-- <div class=\\\"col-md-2\\\">\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"loadData()\\\"> Import Data</button>\\n    </div> -->\\n  </div>\\n  <div class=\\\"row seperator\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"row seperator\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row seperator\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"start\\\">Start date:</label>\\n      <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"start\\\" name=\\\"startDate\\\"\\n        (change)=\\\"onDateChange($event.target.value,true)\\\" />\\n    </div>\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"start\\\">End date:</label>\\n      <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"end\\\" name=\\\"endDate\\\"\\n        (change)=\\\"onDateChange($event.target.value,false)\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox check-container\\\"\\n            style=\\\"margin-left:10px; margin-right:10px;\\\">\\n            <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk,'CALL')\\\">{{chk.name}}</label>\\n            <!-- <label class=\\\"switch\\\" style=\\\"margin-left:10px;margin-top: 9px;\\\">\\n              <input type=\\\"checkbox\\\" checked (change)=\\\"directionValue($event.target.checked,chk)\\\">\\n              <span class=\\\"slider round\\\"></span>\\n            </label> -->\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-10\\\">\\n            </div>\\n          </div>\\n          <table id=\\\"customers\\\">\\n            <tr>\\n              <th>Date</th>\\n              <th>Future Index Long</th>\\n              <th>Future Index Short</th>\\n              <th>Option Index Put Long</th>\\n              <th>Option Index Put Short</th>\\n              <th>Option Index Call Long</th>\\n              <th>Option Index Call Short</th>\\n              <th>Option Stock Call Long</th>\\n              <th>Option Stock Call Short</th>\\n            </tr>\\n            <tr *ngFor=\\\"let activity of activities;let i = index\\\">\\n              <td>{{activity.date| date: 'dd/MM/yyyy'}}</td>\\n              <td>{{activity.futureIdxLong}}</td>\\n              <td>{{activity.futureIdxShort}}</td>\\n              <td>{{activity.optionIdxPutLong}}</td>\\n              <td>{{activity.optionIdxPutShort}}</td>\\n              <td>{{activity.optionIdxCallLong}}</td>\\n              <td>{{activity.optionIdxCallShort}}</td>\\n              <td>{{activity.optionStockCallLong}}</td>\\n              <td>{{activity.optionStockCallShort}}</td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StockService } from '../service/stock.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html'\n  /* styleUrls: ['./activity.component.css'] */\n})\nexport class ActivityComponent implements OnInit {\n\n  startDate: any;\n  endDate: any;\n  activities: any[]=[];\n  constructor(private router: Router, private stockservice: StockService) { }\n\n  ngOnInit() {\n  }\n\n  loadData() {\n    console.log(\"Loading data into DB\");\n    this.stockservice.loadActivityData().subscribe(data => {\n    });\n  };\n\n  getData() {\n    this.stockservice.getActivity(this.startDate,this.endDate)\n      .subscribe(data => {\n        this.activities = data;\n      });\n  }\n\n  onDateChange(value: any, isStartDate) {\n    if (isStartDate) {\n      this.startDate = value;\n    } else\n    this.endDate = value;\n    this.getData();\n  }\n}\n","module.exports = \"\\r\\n.seperator {\\r\\n    margin-top: 10px;\\r\\n    }\\r\\n    label {\\r\\n        font: bold;\\r\\n    }\\r\\n    .sort-arrow{\\r\\n        cursor: pointer;\\r\\n    }\\r\\n    .switch {\\r\\n        position: relative;\\r\\n        display: inline-block;\\r\\n        width: 35px;\\r\\n        height: 15px;\\r\\n      }\\r\\n    .switch input { \\r\\n        opacity: 0;\\r\\n        width: 0;\\r\\n        height: 0;\\r\\n      }\\r\\n    .slider {\\r\\n        position: absolute;\\r\\n        cursor: pointer;\\r\\n        top: 0;\\r\\n        left: 0;\\r\\n        right: 0;\\r\\n        bottom: 0;\\r\\n        background-color: #ccc;\\r\\n        transition: .4s;\\r\\n      }\\r\\n    .slider:before {\\r\\n        position: absolute;\\r\\n        content: \\\"\\\";\\r\\n        height: 15px;\\r\\n        width: 15px;\\r\\n        left: -6px;\\r\\n        bottom: 0px;\\r\\n        background-color: white;\\r\\n        transition: .4s;\\r\\n      }\\r\\n    input:checked + .slider {\\r\\n        background-color: #2196F3;\\r\\n      }\\r\\n    input:focus + .slider {\\r\\n        box-shadow: 0 0 1px #2196F3;\\r\\n      }\\r\\n    input:checked + .slider:before {\\r\\n        -webkit-transform: translateX(26px);\\r\\n        transform: translateX(26px);\\r\\n      }\\r\\n    /* Rounded sliders */\\r\\n    .slider.round {\\r\\n        border-radius: 34px;\\r\\n      }\\r\\n    .slider.round:before {\\r\\n        border-radius: 50%;\\r\\n      }\"","module.exports = \"<div class=\\\"stock-pan\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 \\\">\\n          <h2> Welcome to Money World......!</h2>\\n      </div>\\n  </div>\\n  <div class=\\\"row seperator\\\"></div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 \\\">\\n      <h4> All data load details Details </h4>\\n    </div>\\n </div>\\n <div class=\\\"row seperator\\\"></div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 \\\">\\n            <label> Option Chain Nifty.</label>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <button class=\\\"btn btn-default\\\" (click)=\\\"loadNiftyOptionsData()\\\"> Import Data</button>\\n            </div>\\n          </div>\\n          <div class=\\\"row seperator\\\"></div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 \\\">\\n              <label> Stocks Options Data.</label>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <button class=\\\"btn btn-default\\\" (click)=\\\"loadStocOptionskData()\\\"> Import Data</button>\\n            </div>\\n          </div>\\n          <div class=\\\"row seperator\\\"></div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 \\\">\\n              <label> Stocks List.</label>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <button class=\\\"btn btn-default\\\" (click)=\\\"loadStockData()\\\"> Import Data</button>\\n            </div>\\n          </div>\\n          <div class=\\\"row seperator\\\"></div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 \\\">\\n              <label> FII's data.</label>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <button class=\\\"btn btn-default\\\" (click)=\\\"loadFiiData()\\\"> Import Data</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { StockService } from '../service/stock.service';\nimport { Router } from '@angular/router';\nimport { Stock } from \"../model/Stock\";\n\n@Component({\n  selector: 'app-all-load-data',\n  templateUrl: './all-load-data.component.html',\n  styleUrls: ['./all-load-data.component.css']\n})\nexport class AllLoadDataComponent implements OnInit {\n\n  stocks: Stock[] = [];\n  constructor(private router: Router, private stockservice: StockService) { }\n\n  ngOnInit() {\n  }\n\n  loadStockData() {\n    console.log(\"Loading Stock data into DB\");\n    this.stockservice.loadData().subscribe(data => {\n      this.stocks = data;\n    });\n  };\n\n  loadNiftyOptionsData() {\n    console.log(\"Loading Nifty Options data into DB\");\n    this.stockservice.loadEquity().subscribe(data => {\n    });\n  };\n\n  loadStocOptionskData() {\n    console.log(\"Loading Nifty Options data into DB\");\n    this.stockservice.loadStockOptions().subscribe(data => {\n    });\n  }\n\n  loadFiiData() {\n    console.log(\"Loading data into DB\");\n    this.stockservice.loadActivityData().subscribe(data => {\n    });\n  };\n\n}\n","module.exports = \"<app-menu></app-menu>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n  /* styleUrls: ['./app.component.css'] */\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {routing} from \"./app.routing\";\nimport {AuthenticationService} from \"./service/auth.service\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { StockService } from \"./service/stock.service\";\nimport { ListStocksComponent } from \"./list-stocks/list-stocks.component\";\nimport { MenuComponent } from './menu/menu.component';\nimport { EquityComponent } from './equity/equity.component';\nimport { ActivityComponent } from './activity/activity.component';\nimport { AllLoadDataComponent } from './all-load-data/all-load-data.component';\nimport { StockOptionChainComponent } from './stock-option-chain/stock-option-chain.component';\nimport { IntraDayComponent } from './intra-day/intra-day.component';\nimport { YesterDayTodayComponent } from './yesterDay-today/yesterDay-today';\nimport { PremiumDecayComponent } from './premium-decay/premium-decay.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListStocksComponent,\n    MenuComponent,\n    EquityComponent,\n    YesterDayTodayComponent,\n    ActivityComponent,\n    AllLoadDataComponent,\n    StockOptionChainComponent,\n    IntraDayComponent,\n    PremiumDecayComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthenticationService, StockService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\nimport { ListStocksComponent } from './list-stocks/list-stocks.component';\nimport { EquityComponent } from './equity/equity.component';\nimport { ActivityComponent } from './activity/activity.component';\nimport { AllLoadDataComponent } from './all-load-data/all-load-data.component';\nimport { StockOptionChainComponent } from './stock-option-chain/stock-option-chain.component';\nimport { IntraDayComponent } from './intra-day/intra-day.component';\nimport { YesterDayTodayComponent } from './yesterDay-today/yesterDay-today';\nimport { PremiumDecayComponent } from './premium-decay/premium-decay.component';\n\nconst routes: Routes = [\n  { path: '', component: AllLoadDataComponent },\n  { path: 'stock', component: ListStocksComponent },\n  { path: 'stock-opitons-chain', component: StockOptionChainComponent },\n  { path: 'equity', component: EquityComponent },\n  { path: 'yesterday-today', component: YesterDayTodayComponent },\n  { path: 'exchange-activity', component: ActivityComponent },\n  { path: 'intra-day', component: IntraDayComponent },\n  { path: 'premium-decay', component: PremiumDecayComponent }\n  /* { path: 'all-data-download', component: AllLoadDataComponent } */\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","module.exports = \".grid-container {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: auto auto auto auto;\\r\\n        grid-template-columns: auto auto auto auto;\\r\\n    grid-gap: 10px;\\r\\n    padding: 10px;\\r\\n  }\\r\\n.check-container {\\r\\n  width: 130px;\\r\\n    float: left;\\r\\n}\\r\\n.grid-col-container {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: auto auto;\\r\\n        grid-template-columns: auto auto;\\r\\n    grid-gap: 10px;\\r\\n    padding: 10px;\\r\\n  }\\r\\n.grid-col-container > div {\\r\\n    background-color: rgba(255, 255, 255, 0.8);\\r\\n    text-align: center;\\r\\n  }\\r\\n.column-seprator {\\r\\n    /* Old Chrome, Safari and Opera */\\r\\n    -webkit-column-count: 3; \\r\\n    -webkit-column-gap: 40px;\\r\\n    \\r\\n    /* Old Firefox */\\r\\n    -moz-column-count: 3;\\r\\n    -moz-column-gap: 40px;\\r\\n  \\r\\n    /* Standard syntax */\\r\\n    column-count: 3;\\r\\n    column-gap: 40px;\\r\\n  }\\r\\n\\r\\n  \"","module.exports = \"<div class=\\\"stock-pan\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 \\\">\\n      <h2> Option Chain Nifty.</h2>\\n    </div>\\n   <!--  <div class=\\\"col-md-2\\\">\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"loadEquityData()\\\"> Import Data</button>\\n    </div> -->\\n  </div>\\n  <div class=\\\"row seperator\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"row seperator\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row seperator\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"start\\\">Strike Price:</label>\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"strikePrice\\\" name=\\\"strikePrice\\\"\\n        (change)=\\\"onStrikeChange($event.target.value)\\\">\\n    </div>\\n    <!-- <div class=\\\"col-md-3\\\">\\n      <label for=\\\"days\\\">Symbol:</label>\\n      <select class=\\\"form-control\\\" (change)=\\\"symbolDropDown($event.target.value)\\\">\\n          <option value=''>\\n              Nifty\\n            </option>\\n        <option *ngFor=\\\"let symbol of symbols\\\" value={{symbol.symbol}}>\\n          {{symbol.companyName}}\\n        </option>\\n      </select>\\n    </div> -->\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"start\\\">Start date:</label>\\n      <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"start\\\" name=\\\"startDate\\\"\\n        (change)=\\\"onDateChange($event.target.value,true)\\\" />\\n    </div>\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"start\\\">End date:</label>\\n      <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"end\\\" name=\\\"endDate\\\"\\n        (change)=\\\"onDateChange($event.target.value,false)\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox check-container\\\"\\n            style=\\\"margin-left:10px; margin-right:10px;\\\">\\n            <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk,'CALL')\\\">{{chk.name}}</label>\\n            <!-- <label class=\\\"switch\\\" style=\\\"margin-left:10px;margin-top: 9px;\\\">\\n              <input type=\\\"checkbox\\\" checked (change)=\\\"directionValue($event.target.checked,chk)\\\">\\n              <span class=\\\"slider round\\\"></span>\\n            </label> -->\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-10\\\">\\n              <h4>Call</h4>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <button class=\\\"btn btn-info\\\" (click)=\\\"getData('CALL')\\\"> Get Call</button>\\n            </div>\\n          </div>\\n          <div class=\\\"row seperator\\\"></div>\\n          <table id=\\\"customers\\\">\\n            <tr>\\n              <th >Date</th>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('oi',!sortDir)\\\">OI</th>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('chnginOI',!sortDir)\\\">COI</th>\\n              <th>IV</th>\\n              <th>LTP</th>\\n              <th>Net-C</th>\\n              <th>Vol</th>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('strikePrice',!sortDir)\\\">SP</th>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('postionsVol',!sortDir)\\\">V/CHI</th>\\n            </tr>\\n            <tr *ngIf=\\\"callEquities == ''\\\">No record found for above search....!</tr>\\n            {{callEquities.date}}\\n            <tr *ngFor=\\\"let equity of callEquities;let i = index\\\">\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.date| date: 'dd/MM/yy'}}</td>\\n              <td  *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.oi}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.chnginOI}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.iv}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.ltp}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.netChng}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.volume}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.strikePrice}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.postionsVol | number:'1.1-1'}}</td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox check-container\\\"\\n            style=\\\"margin-left:10px; margin-right:10px;\\\">\\n            <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk,'PUT')\\\">{{chk.name}}</label>\\n            <!-- <label class=\\\"switch\\\" style=\\\"margin-left:10px;margin-top: 9px;\\\">\\n              <input type=\\\"checkbox\\\" checked (change)=\\\"directionValue($event.target.checked,chk)\\\">\\n              <span class=\\\"slider round\\\"></span>\\n            </label> -->\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-10\\\">\\n              <h4>PUT</h4>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <button class=\\\"btn btn-info\\\" (click)=\\\"getData('PUT')\\\"> Get Put</button>\\n            </div>\\n          </div>\\n          <div class=\\\"row seperator\\\"></div>\\n          <table id=\\\"customers\\\">\\n            <tr>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('postionsVol',!sortDir)\\\">V/CHI</th>\\n              <th>Date</th>\\n              <th  class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('oi',!sortDir)\\\">OI</th>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('chnginOI',!sortDir)\\\">C-OI</th>\\n              <th>IV</th>\\n              <th>LTP</th>\\n              <th>Net-C</th>\\n              <th>Vol</th>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('strikePrice',!sortDir)\\\">SP</th>\\n            </tr>\\n            <tr *ngIf=\\\"putEquities == ''\\\">No record found for above search....!</tr>\\n            <tr *ngFor=\\\"let equity of putEquities;let i = index\\\">\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.postionsVol | number:'1.1-1'}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.date | date: 'dd/MM/yy'}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.oi}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.chnginOI}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.iv}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.ltp}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.netChng}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.volume}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.strikePrice}}</td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StockService } from '../service/stock.service';\nimport { Filters } from '../model/Filters';\n\n@Component({\n  selector: 'app-equity',\n  templateUrl: './equity.component.html',\n  styleUrls: ['./equity.component.css']\n})\nexport class EquityComponent implements OnInit {\n\n  checkBoxFilter: Object[];\n  equities: Object[] = [];\n  symbols: any[] = [];\n  filtersRequest: Filters[] = [];\n  callType: string;\n  callEquities: Object[] = [];\n  putEquities: Object[] = [];\n  sortDir: boolean;\n\n  search: any = { strikePrice: null, startDate: null, endDate: null, type: 'CALL' };\n  constructor(private stockservice: StockService) { }\n\n  ngOnInit() {\n    this.getCheckfilter();\n   // this.getSymbols();\n   // this.getEquities();\n  }\n\n  getCheckfilter() {\n    this.stockservice.getFilters(\"equityFilter\").subscribe(data => {\n      this.checkBoxFilter = data;\n    });\n  }\n\n  /* loadEquityData() {\n    console.log(\"Loading data into DB\");\n    this.stockservice.loadEquity().subscribe(data => {\n    });\n  }; */\n  getNifty() {\n    this.search.filter = this.filtersRequest;\n    this.stockservice.getEquityByFilter(this.search)\n      .subscribe(data => {\n        if (this.search.type == 'CALL') {\n          this.callEquities = data;\n        }\n        else\n          this.putEquities = data;\n      });\n      console.log(\"Loading Call data\" + this.callEquities);\n      console.log(\"Loading Put data \" + this.putEquities);\n  }\n\n  checkValue(event: any, obj: any, type: any) {\n    this.search.type = type;\n    if (event) {\n      this.filtersRequest.push(obj);\n    } else {\n      this.filtersRequest = this.filtersRequest.filter(item => item !== obj);\n    }\n    this.getNifty();\n  }\n\n  /* symbolDropDown(symbol: any) {\n    this.search.symbol = symbol;\n    this.getEquities();\n  } */\n\n  /* getSymbols() {\n    this.stockservice.getSymbols().subscribe(data => {\n      this.symbols = data;\n    });\n  } */\n  onStrikeChange(value: any) {\n    this.search.strikePrice = value;\n    this.getNifty();\n  }\n\n  onDateChange(value: any, isStartDate) {\n    if (isStartDate) {\n      this.search.startDate = value;\n    } else\n      this.search.endDate = value;\n    //this.getEquities();\n  }\n\n  getData(value: any) {\n    this.search.type = value;\n    this.getNifty();\n  }\n\n  callSortBy(sortBy, sortDir?) {\n    this.sortDir = sortDir;\n    if (this.sortDir) {\n      this.callEquities.sort(function (a, b) {\n        return a[sortBy] - b[sortBy];\n      });\n    } else {\n      this.callEquities.sort(function (a, b) {\n        return b[sortBy] - a[sortBy];\n      });\n    }\n  }\n  putSortBy(sortBy, sortDir?) {\n    this.sortDir = sortDir;\n    if (this.sortDir) {\n      this.putEquities.sort(function (a, b) {\n        return a[sortBy] - b[sortBy];\n      });\n    } else {\n      this.putEquities.sort(function (a, b) {\n        return b[sortBy] - a[sortBy];\n      });\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"stock-pan\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 \\\">\\n        <h2> Intraday 8 mins difference.</h2>\\n      </div>\\n    </div>\\n    <div class=\\\"row seperator\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"row seperator\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row seperator\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <label for=\\\"start\\\">Start Time:</label>\\n        <input class=\\\"form-control\\\" type=\\\"time\\\" id=\\\"start\\\" name=\\\"startDate\\\"\\n          (change)=\\\"onDateChange($event.target.value,true)\\\" />\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <label for=\\\"start\\\">End Time:</label>\\n        <input class=\\\"form-control\\\" type=\\\"time\\\" id=\\\"end\\\" name=\\\"endDate\\\"\\n          (change)=\\\"onDateChange($event.target.value,false)\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox check-container\\\"\\n              style=\\\"margin-left:10px; margin-right:10px;\\\">\\n              <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk,'CALL')\\\">{{chk.name}}</label>\\n              <!-- <label class=\\\"switch\\\" style=\\\"margin-left:10px;margin-top: 9px;\\\">\\n                <input type=\\\"checkbox\\\" checked (change)=\\\"directionValue($event.target.checked,chk)\\\">\\n                <span class=\\\"slider round\\\"></span>\\n              </label> -->\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-10\\\">\\n                    <h4>Call</h4>\\n                  </div>\\n                  <div class=\\\"col-md-1\\\">\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"getData('CALL')\\\"> Get Call</button>\\n                  </div>\\n            </div>\\n            <div class=\\\"row seperator\\\"></div>\\n            <table id=\\\"equityTable\\\">\\n              <tr>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('postionsVol',!sortDir)\\\">Chg-Vol</th> \\n                <th>Date</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('oi',!sortDir)\\\">OI</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('chnginOI',!sortDir)\\\">COI</th>\\n                <th>IV</th>\\n                <th>LTP</th>\\n                <!-- <th>Net-C</th> -->\\n                <th>Vol-Diff</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('strikePrice',!sortDir)\\\">SP</th>\\n              </tr>\\n              <tr *ngIf=\\\"callIntradayYesterdayToday == ''\\\">No record found for above search....!</tr>\\n             \\n              <tr *ngFor=\\\"let equity of callIntradayYesterdayToday;let i = index\\\">\\n                <td *ngIf=\\\"equity.postionsVol!=='NaN'\\\">{{equity.postionsVol | number:'1.1-1'}}</td> \\n                <td>{{equity.date| date: 'hh-mm'}}</td>\\n                <td><label>{{equity.oi}}</label>\\n                  <!-- <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.oi}}</label>  -->\\n                </td>\\n                <td><label>{{equity.chnginOI}}</label>\\n                   <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.chnginDif}}</label> \\n                </td>\\n                <td><label>{{equity.iv | number:'1.1-1'}}</label>\\n                   <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.iv | number:'1.1-1'}}</label> \\n                </td>\\n                <td><label >{{equity.ltp | number:'1.1-1'}}</label>\\n                  <!--  <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.ltp | number:'1.1-1'}}</label>  -->\\n                </td>\\n               <!--  <td>{{equity.netChng | number:'1.1-1'}}</td> -->\\n                <td>\\n                  <label>{{equity.volume | number:'1.1-1'}}</label>\\n                   <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.volumeDif | number:'1.1-1'}}</label> \\n                </td> \\n\\n\\n                <td>{{equity.strikePrice}}</td>\\n              </tr>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox check-container\\\"\\n                style=\\\"margin-left:10px; margin-right:10px;\\\">\\n                <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk,'PUT')\\\">{{chk.name}}</label>\\n                <!-- <label class=\\\"switch\\\" style=\\\"margin-left:10px;margin-top: 9px;\\\">\\n                  <input type=\\\"checkbox\\\" checked (change)=\\\"directionValue($event.target.checked,chk)\\\">\\n                  <span class=\\\"slider round\\\"></span>\\n                </label> -->\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-10\\\">\\n                  <h4>PUT</h4>\\n                </div>\\n                <div class=\\\"col-md-1\\\">\\n                  <button class=\\\"btn btn-info\\\" (click)=\\\"getData('PUT')\\\"> Get Put</button>\\n                </div>\\n              </div>\\n              <div class=\\\"row seperator\\\"></div>\\n              <table id=\\\"equityTable\\\">\\n                <tr>\\n                  <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('postionsVol',!sortDir)\\\">Chg-Vol</th> \\n                  <th>Date</th>\\n                  <th  class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('oi',!sortDir)\\\">OI</th>\\n                  <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('chnginOI',!sortDir)\\\">C-OI</th>\\n                  <th>IV</th>\\n                  <th>LTP</th>\\n                 <!--  <th>Net-C</th> -->\\n                  <th>Vol-Diff</th> \\n                  <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('strikePrice',!sortDir)\\\">SP</th>\\n                </tr>\\n                <tr *ngIf=\\\"putIntradayYesterdayToday == ''\\\">No record found for above search....!</tr>\\n                <tr *ngFor=\\\"let equity of putIntradayYesterdayToday;let i = index\\\">\\n                    <td *ngIf=\\\"equity.postionsVol!=='NaN'\\\">{{equity.postionsVol | number:'1.1-1'}}</td> \\n                    <td>{{equity.date| date: 'hh-mm'}}</td>\\n                    <td><label class=\\\"strikethrough\\\">{{equity.oi}}</label>\\n                      <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.oi}}</label>\\n                    </td>\\n                    <td><label class=\\\"strikethrough\\\">{{equity.chnginOI}}</label>\\n                       <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.chnginOI}}</label>\\n                    </td>\\n                    <td><label class=\\\"strikethrough\\\">{{equity.iv | number:'1.1-1'}}</label>\\n                      <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.iv | number:'1.1-1'}}</label></td> \\n                    <td><label class=\\\"strikethrough\\\">{{equity.ltp | number:'1.1-1'}}</label>\\n                      <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.ltp| number:'1.1-1'}}</label></td> \\n                   <!-- <td>{{equity.netChng | number:'1.1-1'}}</td> -->\\n                    <td>\\n                      <label>{{equity.volume | number:'1.1-1'}}</label>\\n                      <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.volumeDif | number:'1.1-1'}}</label>\\n                    </td> \\n                    <td>{{equity.strikePrice}}</td>\\n                  </tr>\\n              </table>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n      </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Filters } from '../model/Filters';\nimport { StockService } from '../service/stock.service';\n\n@Component({\n  selector: 'app-intra-day',\n  templateUrl: './intra-day.component.html'\n  /* styleUrls: ['./intra-day.component.css'] */\n})\nexport class IntraDayComponent implements OnInit {\n\n  checkBoxFilter: any[] = [];\n  equities: any = [];\n  search: any = { strikePrice: null, startDate: null, endDate: null, type: 'CALL' };\n  filtersRequest: Filters[] = [];\n  startTime: any;\n  endTime: any;\n  callIntradayYesterdayToday: Object[] = [];\n  putIntradayYesterdayToday: Object[] = [];\n  sortDir: boolean;\n  constructor(private stockService:StockService) { }\n\n  ngOnInit() {\n    this.getCheckfilter();\n  }\n\n   getData(value: any) {\n    this.search.type = value;\n    this.getIntradayYesterdayMinusTodayCall();\n  }\n\n  getCheckfilter() {\n    this.stockService.getFilters(\"equityFilter\").subscribe(data => {\n      this.checkBoxFilter = data;\n    });\n  }\n\n  /* getEquities() {\n    this.search.filter = this.filtersRequest;\n    this.stockService.getIntraDay(this.startTime,this.endTime,this.search)\n      .subscribe(data => {\n          this.equities = data;\n      });\n  } */\n\n  getIntradayYesterdayMinusTodayCall() {\n    this.search.filter = this.filtersRequest;\n    this.stockService.getIntraDay(this.startTime,this.endTime,this.search)\n      .subscribe(data => {\n        if (this.search.type == 'CALL') {\n          this.callIntradayYesterdayToday = data;\n        }\n        else\n          this.putIntradayYesterdayToday = data;\n      });\n\n      console.log(\"Calldata--> \" +this.callIntradayYesterdayToday);\n      console.log(\"putdata--> \" +this.putIntradayYesterdayToday);\n  }\n\n  checkValue(event: any, obj: any, type: any) {\n    this.search.type = type;\n    if (event) {\n      this.filtersRequest.push(obj);\n    } else {\n      this.filtersRequest = this.filtersRequest.filter(item => item !== obj);\n    }\n    this.getIntradayYesterdayMinusTodayCall();\n  }\n\n  onDateChange(value: any, isStartDate) {\n    if (isStartDate) {\n      this.startTime = value;\n    } else\n      this.endTime = value;\n    //this.getIntradayYesterdayMinusTodayCall();\n  }\n\n  callSortBy(sortBy, sortDir?) {\n    this.sortDir = sortDir;\n    if (this.sortDir) {\n      this.callIntradayYesterdayToday.sort(function (a, b) {\n        return a[sortBy] - b[sortBy];\n      });\n    } else {\n      this.callIntradayYesterdayToday.sort(function (a, b) {\n        return b[sortBy] - a[sortBy];\n      });\n    }\n  }\n  putSortBy(sortBy, sortDir?) {\n    this.sortDir = sortDir;\n    if (this.sortDir) {\n      this.putIntradayYesterdayToday.sort(function (a, b) {\n        return a[sortBy] - b[sortBy];\n      });\n    } else {\n      this.putIntradayYesterdayToday.sort(function (a, b) {\n        return b[sortBy] - a[sortBy];\n      });\n    }\n  }\n\n  \n}\n","module.exports = \"<div class=\\\"stock-pan\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 \\\">\\n      <h2> Stock Details</h2>\\n    </div>\\n    <!-- <div class=\\\"col-md-6 seperator\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"loadData()\\\"> Import Data</button>\\n      </div>\\n    </div> -->\\n  </div>\\n\\n  <div class=\\\"row seperator\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"row seperator\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <label for=\\\"start\\\">Start date:</label>\\n          <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"start\\\" name=\\\"startDate\\\"\\n            (change)=\\\"onDateChange($event.target.value,true)\\\" />\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <label for=\\\"start\\\">End date:</label>\\n          <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"end\\\" name=\\\"endDate\\\"\\n            (change)=\\\"onDateChange($event.target.value,false)\\\">\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"getAllStocksDataList()\\\"> Search</button>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-body\\\">\\n          Note <br><b>ON :</b> Greater value<br>\\n          <b>OFF : </b> Less value\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\" *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox\\\"\\n              style=\\\"margin-left:10px; margin-right:10px;\\\">\\n              <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk)\\\">{{chk.name}}</label>\\n              <label class=\\\"switch\\\" style=\\\"margin-left:10px;margin-top: 9px;\\\">\\n                <input type=\\\"checkbox\\\" checked (change)=\\\"directionValue($event.target.checked,chk)\\\">\\n                <span class=\\\"slider round\\\"></span>\\n              </label>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <label>Total stocks : {{stocks.length}}</label>\\n    <div class=\\\"col-md-12\\\">\\n      <table class=\\\"table table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"hidden\\\">Date</th>\\n            <th (click)=\\\"sortBy('name',!sortDir)\\\">Name</th>\\n            <th class=\\\"sort-arrow\\\" (click)=\\\"sortBy('closePrice',!sortDir)\\\">Close Price</th>\\n            <th class=\\\"sort-arrow\\\" (click)=\\\"sortBy('ttlTradeQty',!sortDir)\\\">Trade Qty</th>\\n            <th class=\\\"sort-arrow\\\" (click)=\\\"sortBy('deliveryQty',!sortDir)\\\">Del Qty</th>\\n            <th class=\\\"sort-arrow\\\" (click)=\\\"sortBy('deliveryPer',!sortDir)\\\">Del Per</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let stock of stocks;let i = index\\\">\\n            <td>{{stock.date| date: 'dd/MM/yyyy'}}</td>\\n            <td>{{stock.name}}</td>\\n            <td>{{stock.closePrice}}</td>\\n            <td>{{stock.ttlTradeQty}}</td>\\n            <td>{{stock.deliveryQty}}</td>\\n            <td>{{stock.deliveryPer}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { StockService } from \"../service/stock.service\";\nimport { Stock } from \"../model/Stock\";\nimport { Filters } from '../model/Filters';\n\n@Component({\n  selector: 'app-list-stock',\n  templateUrl: './list-stocks.component.html',\n  styleUrls: ['./list.stock.css']\n})\nexport class ListStocksComponent implements OnInit {\n\n  stocks: Stock[] = [];\n  startDate: any;\n  endDate: any;\n  checkBox: Object[];\n  checkBoxFilter: Object[];\n  filter: Filters[] = [];\n  day: any;\n  sortDir: boolean;\n  constructor(private router: Router, private stockservice: StockService) { }\n\n  ngOnInit() {\n    this.filter = [];\n    this.checkBox = [\n      { key: \"CLOSE_PRICE\", value: 0, title: \"Close Price\" },\n      { key: \"TRADE_QTY\", value: 1, title: \"TT Trade Qty\" }\n    ];\n    this.getCheckfilter();\n  }\n\n  getStocks() {\n    this.stockservice.getStocksByFilter(this.startDate,this.endDate,this.filter)\n      .subscribe(data => {\n        this.stocks = data;\n      });\n      console.log(this.stocks);\n  }\n  getAllStocksDataList(){\n    this.stockservice.getAllStocksDataList(this.startDate,this.endDate,this.filter)\n      .subscribe(data => {\n        this.stocks = data;\n      });\n      console.log(this.stocks);\n  }\n\n  loadData() {\n    console.log(\"Loading data into DB\");\n    this.stockservice.loadData().subscribe(data => {\n      this.stocks = data;\n    });\n    //this.router.navigate(['add-user']);\n  };\n\n  getCheckfilter() {\n    this.stockservice.getFilters(\"filter\").subscribe(data => {\n      this.checkBoxFilter = data;\n    });\n  }\n\n  checkValue(event: any, obj: any) {\n    if (event) {\n      this.filter.push(obj);\n    } else {\n      this.filter = this.filter.filter(item => item !== obj);\n    }\n    this.getStocks();\n  }\n\n  directionValue(event: any, obj: Filters) {\n    if (this.filter.length >0) {\n      let filtr: Filters;\n      filtr = this.filter.find(item => item == obj)\n      if (event) {\n        filtr.direction = 'UP';\n      } else {\n        filtr.direction = 'DOWN';\n      }\n      this.filter = this.filter.filter(item => item !== obj)\n      this.filter.push(filtr);\n      this.getStocks();\n    }\n\n  }\n\n  sortBy(sortBy, sortDir?) {\n    this.sortDir = sortDir;\n    if (this.sortDir) {\n      this.stocks.sort(function (a, b) {\n        return a[sortBy] - b[sortBy];\n      });\n    } else {\n      this.stocks.sort(function (a, b) {\n        return b[sortBy] - a[sortBy];\n      });\n    }\n  }\n\n  onDateChange(value: any, isStartDate) {\n    if (isStartDate) {\n      this.startDate = value;\n    } else\n    this.endDate = value;\n    \n    \n  }\n}\n","module.exports = \"\\r\\n.seperator {\\r\\nmargin-top: 10px;\\r\\n}\\r\\nlabel {\\r\\n    font: bold;\\r\\n}\\r\\n.sort-arrow{\\r\\n    cursor: pointer;\\r\\n}\\r\\n.switch {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    width: 35px;\\r\\n    height: 15px;\\r\\n  }\\r\\n.switch input { \\r\\n    opacity: 0;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n  }\\r\\n.slider {\\r\\n    position: absolute;\\r\\n    cursor: pointer;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    background-color: #ccc;\\r\\n    transition: .4s;\\r\\n  }\\r\\n.slider:before {\\r\\n    position: absolute;\\r\\n    content: \\\"\\\";\\r\\n    height: 15px;\\r\\n    width: 15px;\\r\\n    left: -6px;\\r\\n    bottom: 0px;\\r\\n    background-color: white;\\r\\n    transition: .4s;\\r\\n  }\\r\\ninput:checked + .slider {\\r\\n    background-color: #2196F3;\\r\\n  }\\r\\ninput:focus + .slider {\\r\\n    box-shadow: 0 0 1px #2196F3;\\r\\n  }\\r\\ninput:checked + .slider:before {\\r\\n    -webkit-transform: translateX(26px);\\r\\n    transform: translateX(26px);\\r\\n  }\\r\\n/* Rounded sliders */\\r\\n.slider.round {\\r\\n    border-radius: 34px;\\r\\n  }\\r\\n.slider.round:before {\\r\\n    border-radius: 50%;\\r\\n  }\"","module.exports = \"body {margin:0;}\\r\\n\\r\\nul {\\r\\n  list-style-type: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  overflow: hidden;\\r\\n  background-color: #333;\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nli {\\r\\n  float: left;\\r\\n}\\r\\n\\r\\nli a {\\r\\n  display: block;\\r\\n  color: white;\\r\\n  text-align: center;\\r\\n  padding: 14px 16px;\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\nli a:hover:not(.active) {\\r\\n  background-color: #111;\\r\\n}\\r\\n\\r\\n.active {\\r\\n  background-color: #cc4e82;\\r\\n}\"","module.exports = \"<ul>\\n    <li><a class=\\\"active\\\" href=\\\"#home\\\">Home</a></li>\\n    <li><a routerLink=\\\"/stock\\\">Stock Data</a></li>\\n    <li><a routerLink=\\\"/stock-opitons-chain\\\">Stock Option Chain</a></li>\\n    <li><a routerLink=\\\"/equity\\\">Nifty Option Chain</a></li>\\n    <li><a routerLink=\\\"/yesterday-today\\\">Today-Yesterday</a></li>\\n    <li><a routerLink=\\\"/intra-day\\\">Intra-Day</a></li>\\n    <li><a routerLink=\\\"/exchange-activity\\\">FII's Data</a></li>\\n    <li><a routerLink=\\\"/premium-decay\\\">Premium Decay</a></li>\\n    \\n    <!-- <li><a routerLink=\\\"/all-data-download\\\">All Data Download</a></li> -->\\n  </ul>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"stock-pan\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 \\\">\\n      <h2> Premium Decay Calculation.</h2>\\n    </div>\\n   <!--  <div class=\\\"col-md-2\\\">\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"loadEquityData()\\\"> Import Data</button>\\n    </div> -->\\n  </div>\\n  <div class=\\\"row seperator\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"row seperator\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row seperator\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"start\\\">Start date:</label>\\n      <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"start\\\" name=\\\"startDate\\\"\\n        (change)=\\\"onDateChange($event.target.value,true)\\\" />\\n    </div>\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"start\\\">End date:</label>\\n      <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"end\\\" name=\\\"endDate\\\"\\n        (change)=\\\"onDateChange($event.target.value,false)\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-10\\\">\\n              <h4>Call</h4>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <button class=\\\"btn btn-info\\\" (click)=\\\"getPremiumDecayData('CALL')\\\"> Get Call</button>\\n            </div>\\n          </div>\\n          <div class=\\\"row seperator\\\"></div>\\n          <table id=\\\"customers\\\">\\n            <tr>\\n              <th >Date</th>\\n              <th>OI</th>\\n              <th>COI</th>\\n              <th>IV</th>\\n              <th>LTP</th>\\n              <th>SP</th>\\n              </tr>\\n            <tr *ngFor=\\\"let equity of callPremiumDecay;let i = index\\\">\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.date| date: 'dd/MM/yy'}}</td>\\n              <td  *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.oi}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.chnginOI}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.iv}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.ltp}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.strikePrice}}</td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-10\\\">\\n              <h4>PUT</h4>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <button class=\\\"btn btn-info\\\" (click)=\\\"getPremiumDecayData('PUT')\\\"> Get Put</button>\\n            </div>\\n          </div>\\n          <div class=\\\"row seperator\\\"></div>\\n          <table id=\\\"customers\\\">\\n            <tr>\\n              <th>Date</th>\\n              <th>OI</th>\\n              <th>C-OI</th>\\n              <th>IV</th>\\n              <th>LTP</th>\\n              <th>SP</th>\\n            </tr>\\n            <tr *ngFor=\\\"let equity of putPremiumDecay;let i = index\\\">\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.date | date: 'dd/MM/yy'}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.oi}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.chnginOI}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.iv}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.ltp}}</td>\\n              <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.strikePrice}}</td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StockService } from '../service/stock.service';\nimport { Filters } from '../model/Filters';\n\n@Component({\n  selector: 'app-premium-decay',\n  templateUrl: './premium-decay.component.html',\n  styleUrls: ['./premium-decay.component.css']\n})\nexport class PremiumDecayComponent implements OnInit {\n\n  checkBoxFilter: Object[];\n  filtersRequest: Filters[] = [];\n  callPremiumDecay: Object[] = [];\n  putPremiumDecay: Object[] = [];\n  search: any = { strikePrice: null, startDate: null, endDate: null, type: 'CALL' };\n  constructor(private stockservice: StockService) { }\n\n  ngOnInit() {\n    this.getCheckfilter();\n  }\n\n  getCheckfilter() {\n    this.stockservice.getFilters(\"equityFilter\").subscribe(data => {\n      this.checkBoxFilter = data;\n    });\n  }\n\n  getPremiumDecayData(value: any) {\n    this.search.type = value;\n    this.getNiftyPremiumDecay();\n  }\n\n  onDateChange(value: any, isStartDate) {\n    if (isStartDate) {\n      this.search.startDate = value;\n    } else\n      this.search.endDate = value;\n    //this.getEquities();\n  }\n\n  getNiftyPremiumDecay() {\n    this.search.filter = this.filtersRequest;\n    this.stockservice.getPremiumDecayByFilter(this.search)\n      .subscribe(data => {\n        if (this.search.type == 'CALL') {\n          this.callPremiumDecay = data;\n        }\n        else\n          this.putPremiumDecay = data;\n      });\n      console.log(\"Loading Call data\" + this.callPremiumDecay);\n      console.log(\"Loading Put data \" + this.putPremiumDecay);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(private http: HttpClient) {\n  }\n\n  login(username: string, password: string) {\n    return this.http.post<any>('/api/authenticate', {username: username, password: password})\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Stock } from \"../model/Stock\";\nimport { Filters } from '../model/Filters';\n\n@Injectable()\nexport class StockService {\n  constructor(private http: HttpClient) { }\n  baseUrl: string = 'http://localhost:8080/';\n  equityEndPoint: string = 'options/';\n\n  // Stock service...........!\n  loadData() {\n    return this.http.get<Stock[]>(this.baseUrl + 'stock/load-stock');\n  }\n  getStocksByFilter(startDate: any,endDate: any, filetr: Object) {\n    let params = new HttpParams();\n    params = params.append(\"endDate\", endDate);\n    params = params.append(\"startDate\", startDate);\n    //params = params.append(\"filter\", filetr.toString());\n    return this.http.post<Stock[]>(this.baseUrl + 'stock/search' ,filetr, {params: params});\n  }\n  getAllStocksDataList(startDate: any,endDate: any , filetr: Object) {\n    let params = new HttpParams();\n    params = params.append(\"endDate\", endDate);\n    params = params.append(\"startDate\", startDate);\n    //params = params.append(\"filter\", filetr.toString());\n    return this.http.post<Stock[]>(this.baseUrl + 'stock/get-all-stock-list' ,filetr , {params: params});\n  }\n  getFilters(type: string) {\n    let params = new HttpParams();\n    params = params.append(\"type\", type);\n    return this.http.get<Filters[]>(this.baseUrl+ 'stock/get-filter',{params: params});\n  }\n\n\n  //Service for Equity Component\n  loadEquity() {\n    return this.http.get<Stock[]>(this.baseUrl + this.equityEndPoint+'load-nifty');\n  }\n  getEquityByFilter(search : any) {\n    let params = new HttpParams();\n    return this.http.post<Stock[]>(this.baseUrl + this.equityEndPoint+ 'search/nifty' ,search);\n  }\n\n  \n  // Service for Yesterday - Today\n  getYesterdayMinusTodayByFilter(search : any) {\n    let params = new HttpParams();\n    return this.http.post<Stock[]>(this.baseUrl + this.equityEndPoint+  'nifty/yesterday-today' ,search);\n  }\n\n\n  //Service for Activity Component\n  loadActivityData() {\n    return this.http.get<Stock[]>(this.baseUrl + 'activity/load');\n  }\n  getActivity(startDate: any,endDate: any, filter?: Object) {\n    let params = new HttpParams();\n    params = params.append(\"endDate\", endDate);\n    params = params.append(\"startDate\", startDate);\n    return this.http.post<any[]>(this.baseUrl + 'activity/search' ,params);\n  }\n\n\n//Stock Options Services..!\n  loadStockOptions() {\n    return this.http.get<Stock[]>(this.baseUrl + this.equityEndPoint+ 'load-stocksOptions');\n  }\n  getSymbols() {\n    return this.http.get<Filters[]>(this.baseUrl+ 'stock/symbol');\n  }\n  getStocksOptionsByFilter(search : any) {\n    let params = new HttpParams();\n    return this.http.post<Stock[]>(this.baseUrl + this.equityEndPoint+ 'search/stocksOptions' ,search);\n  }\n  getIntraDay(startTime:any,endTime:any,search : any) {\n    let params = new HttpParams();\n    params = params.append(\"startTime\", startTime);\n    params = params.append(\"endTime\", endTime);\n    return this.http.post<Stock[]>(this.baseUrl + this.equityEndPoint + 'intraday',search, {params:params});\n  }\n  getPremiumDecayByFilter(search : any) {\n    let params = new HttpParams();\n    return this.http.post<Stock[]>(this.baseUrl + this.equityEndPoint+ 'search/premium-decay' ,search);\n  }\n  /* \n  createUser(user: Stock) {\n    return this.http.post(this.baseUrl, user);\n  }\n\n  updateUser(user: Stock) {\n    return this.http.put(this.baseUrl + '/' + user.id, user);\n  }\n\n  deleteUser(id: number) {\n    return this.http.delete(this.baseUrl + '/' + id);\n  } */\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"stock-pan\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 \\\">\\n        <h2> Stock Option Chain.</h2>\\n      </div>\\n    </div>\\n    <div class=\\\"row seperator\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"row seperator\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row seperator\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <label for=\\\"days\\\">Symbol:</label>\\n        <select class=\\\"form-control\\\" (change)=\\\"symbolDropDown($event.target.value)\\\">\\n           <option *ngFor=\\\"let symbol of symbols\\\" value={{symbol.symbol}}>\\n            {{symbol.companyName}}\\n          </option>\\n        </select>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <label for=\\\"start\\\">Start date:</label>\\n        <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"start\\\" name=\\\"startDate\\\"\\n          (change)=\\\"onDateChange($event.target.value,true)\\\" />\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <label for=\\\"start\\\">End date:</label>\\n        <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"end\\\" name=\\\"endDate\\\"\\n          (change)=\\\"onDateChange($event.target.value,false)\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row seperator\\\"></div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox check-container\\\"\\n              style=\\\"margin-left:10px; margin-right:10px;\\\">\\n              <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk,'CALL')\\\">{{chk.name}}</label>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-10\\\">\\n                <h4>Call</h4>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                <button class=\\\"btn btn-info\\\" (click)=\\\"getData('CALL')\\\"> Get Call</button>\\n              </div>\\n            </div>\\n            <div class=\\\"row seperator\\\"></div>\\n            <table id=\\\"customers\\\">\\n              <tr>\\n                <th >Date</th>\\n                <th >Symbol</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('oi',!sortDir)\\\">OI</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('chnginOI',!sortDir)\\\">COI</th>\\n                <th>IV</th>\\n                <th>LTP</th>\\n                <th>Net-C</th>\\n                <th>Vol</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('strikePrice',!sortDir)\\\">SP</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('postionsVol',!sortDir)\\\">CHI/VOL</th>\\n              </tr>\\n              <tr *ngIf=\\\"callEquities == ''\\\">No record found for above search....!</tr>\\n              <tr *ngFor=\\\"let equity of callEquities;let i = index\\\">\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.date| date: 'dd/MM/yy'}}</td>\\n                <td  *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.symbol}}</td>\\n                <td  *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.oi}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.chnginOI}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.iv}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.ltp}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.netChng}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.volume}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.strikePrice}}</td>\\n                <!-- <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.chnginOI / equity.volume | number:'1.1-1'}}</td> -->\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.postionsVol | number:'1.1-1'}}</td>\\n              </tr>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox check-container\\\"\\n              style=\\\"margin-left:10px; margin-right:10px;\\\">\\n              <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk,'PUT')\\\">{{chk.name}}</label>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-10\\\">\\n                <h4>PUT</h4>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                <button class=\\\"btn btn-info\\\" (click)=\\\"getData('PUT')\\\"> Get Put</button>\\n              </div>\\n            </div>\\n            <div class=\\\"row seperator\\\"></div>\\n            <table id=\\\"customers\\\">\\n              <tr>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('postionsVol',!sortDir)\\\">CHI/VOL</th>\\n                <th>Date</th>\\n                <th >Symbol</th>\\n                <th  class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('oi',!sortDir)\\\">OI</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('chnginOI',!sortDir)\\\">C-OI</th>\\n                <th>IV</th>\\n                <th>LTP</th>\\n                <th>Net-C</th>\\n                <th>Vol</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('strikePrice',!sortDir)\\\">SP</th>\\n              </tr>\\n              <tr *ngIf=\\\"putEquities == ''\\\">No record found for above search....!</tr>\\n              <tr *ngFor=\\\"let equity of putEquities;let i = index\\\">\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.postionsVol | number:'1.1-1'}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.date | date: 'dd/MM/yy'}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.symbol}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.oi}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.chnginOI}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.iv}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.ltp}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.netChng}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.volume}}</td>\\n                <td *ngIf=\\\"equity.oi >0  && equity.iv > 0\\\">{{equity.strikePrice}}</td>\\n              </tr>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Filters } from '../model/Filters';\nimport { StockService } from '../service/stock.service';\n\n@Component({\n  selector: 'app-stock-option-chain',\n  templateUrl: './stock-option-chain.component.html',\n  styleUrls: ['./stock-option-chain.component.css']\n})\nexport class StockOptionChainComponent implements OnInit {\n\n  checkBoxFilter: Object[];\n  equities: Object[] = [];\n  symbols: any[] = [];\n  filtersRequest: Filters[] = [];\n  callType: string;\n  callEquities: Object[] = [];\n  putEquities: Object[] = [];\n  sortDir: boolean;\n  search: any = { strikePrice: null, startDate: null, endDate: null, type: 'CALL' };\n\n  constructor(private stockservice: StockService) { }\n\n  ngOnInit() {\n    this.getCheckfilter();\n    this.getSymbols();\n    this.getStockOptions();\n  }\n  getCheckfilter() {\n    this.stockservice.getFilters(\"equityFilter\").subscribe(data => {\n      this.checkBoxFilter = data;\n    });\n  }\n  getSymbols() {\n    this.stockservice.getSymbols().subscribe(data => {\n      this.symbols = data;\n    });\n  }\n  onDateChange(value: any, isStartDate) {\n    if (isStartDate) {\n      this.search.startDate = value;\n    } else\n      this.search.endDate = value;\n   // this.getStockOptions();\n  }\n  checkValue(event: any, obj: any, type: any) {\n    this.search.type = type;\n    if (event) {\n      this.filtersRequest.push(obj);\n    } else {\n      this.filtersRequest = this.filtersRequest.filter(item => item !== obj);\n    }\n    this.getStockOptions();\n  }\n  getData(value: any) {\n    this.search.type = value;\n    this.getStockOptions();\n  }\n  callSortBy(sortBy, sortDir?) {\n    this.sortDir = sortDir;\n    if (this.sortDir) {\n      this.callEquities.sort(function (a, b) {\n        return a[sortBy] - b[sortBy];\n      });\n    } else {\n      this.callEquities.sort(function (a, b) {\n        return b[sortBy] - a[sortBy];\n      });\n    }\n  }\n  putSortBy(sortBy, sortDir?) {\n    this.sortDir = sortDir;\n    if (this.sortDir) {\n      this.putEquities.sort(function (a, b) {\n        return a[sortBy] - b[sortBy];\n      });\n    } else {\n      this.putEquities.sort(function (a, b) {\n        return b[sortBy] - a[sortBy];\n      });\n    }\n  }\n\n  getStockOptions() {\n    this.search.filter = this.filtersRequest;\n    this.stockservice.getStocksOptionsByFilter(this.search)\n      .subscribe(data => {\n        if (this.search.type == 'CALL') {\n          this.callEquities = data;\n        }\n        else\n          this.putEquities = data;\n      });\n      console.log(\"Loading Call data\" + this.callEquities);\n      console.log(\"Loading Put data \" + this.putEquities);\n  }\n\n  symbolDropDown(symbol: any) {\n    this.search.symbol = symbol;\n    //this.getEquities();\n  }\n}\n","module.exports = \".strikethrough {\\r\\n    text-decoration: line-through;\\r\\n}\"","module.exports = \"<div class=\\\"stock-pan\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 \\\">\\n      <h2> Today - Yesterday EOD.</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row seperator\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"row seperator\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row seperator\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"start\\\">Start date:</label>\\n      <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"start\\\" name=\\\"startDate\\\"\\n        (change)=\\\"onDateChange($event.target.value,true)\\\" />\\n    </div>\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"start\\\">End date:</label>\\n      <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"end\\\" name=\\\"endDate\\\"\\n        (change)=\\\"onDateChange($event.target.value,false)\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox check-container\\\"\\n            style=\\\"margin-left:10px; margin-right:10px;\\\">\\n            <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk,'CALL')\\\">{{chk.name}}</label>\\n            <!-- <label class=\\\"switch\\\" style=\\\"margin-left:10px;margin-top: 9px;\\\">\\n              <input type=\\\"checkbox\\\" checked (change)=\\\"directionValue($event.target.checked,chk)\\\">\\n              <span class=\\\"slider round\\\"></span>\\n            </label> -->\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-10\\\">\\n                  <h4>Call</h4>\\n                </div>\\n                <div class=\\\"col-md-1\\\">\\n                  <button class=\\\"btn btn-info\\\" (click)=\\\"getData('CALL')\\\"> Get Call</button>\\n                </div>\\n          </div>\\n          <div class=\\\"row seperator\\\"></div>\\n          <table id=\\\"equityTable\\\">\\n            <tr>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('postionsVol',!sortDir)\\\">Chg-Vol</th>\\n              <th>Date</th>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('oi',!sortDir)\\\">OI</th>\\n              <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('chnginOI',!sortDir)\\\">COI</th>\\n              <th>IV</th>\\n              <th>LTP</th>\\n             <!--  <th>Net-C</th> -->\\n              <th>Vol-Diff</th> \\n              <th class=\\\"sort-arrow\\\" (click)=\\\"callSortBy('strikePrice',!sortDir)\\\">SP</th>\\n            </tr>\\n            <tr *ngIf=\\\"callYesterdayToday == ''\\\">No record found for above search....!</tr>\\n            <tr *ngFor=\\\"let equity of callYesterdayToday;let i = index\\\">\\n              <td *ngIf=\\\"equity.postionsVol!=='NaN'\\\">{{equity.postionsVol | number:'1.1-1'}}</td>\\n              <td>{{equity.date| date: 'dd/MM'}}</td>\\n              <td><label class=\\\"strikethrough\\\">{{equity.oi}}</label>\\n                <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.oi}}</label>\\n              </td>\\n              <td><label class=\\\"strikethrough\\\">{{equity.chnginOI}}</label>\\n                <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.chnginDif}}</label>\\n              </td>\\n              <td><label class=\\\"strikethrough\\\">{{equity.iv | number:'1.1-1'}}</label>\\n                <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.iv | number:'1.1-1'}}</label> \\n              </td>\\n              <td><label class=\\\"strikethrough\\\">{{equity.ltp | number:'1.1-1'}}</label>\\n                <!-- <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.ltp | number:'1.1-1'}}</label>  -->\\n              </td>\\n              <!-- <td>{{equity.netChng | number:'1.1-1'}}</td> -->\\n              <td>{{equity.volume}}</td>\\n              <td>{{equity.strikePrice}}</td> \\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div *ngFor=\\\"let chk of checkBoxFilter\\\" class=\\\"checkbox check-container\\\"\\n              style=\\\"margin-left:10px; margin-right:10px;\\\">\\n              <label><input type=\\\"checkbox\\\" (change)=\\\"checkValue($event.target.checked,chk,'PUT')\\\">{{chk.name}}</label>\\n              <!-- <label class=\\\"switch\\\" style=\\\"margin-left:10px;margin-top: 9px;\\\">\\n                <input type=\\\"checkbox\\\" checked (change)=\\\"directionValue($event.target.checked,chk)\\\">\\n                <span class=\\\"slider round\\\"></span>\\n              </label> -->\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-10\\\">\\n                <h4>PUT</h4>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                <button class=\\\"btn btn-info\\\" (click)=\\\"getData('PUT')\\\"> Get Put</button>\\n              </div>\\n            </div>\\n            <div class=\\\"row seperator\\\"></div>\\n            <table id=\\\"equityTable\\\">\\n              <tr>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('postionsVol',!sortDir)\\\">Chg-Vol</th> \\n                <th>Date</th>\\n                <th  class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('oi',!sortDir)\\\">OI</th>\\n                <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('chnginOI',!sortDir)\\\">C-OI</th>\\n                <th>IV</th>\\n                <th>LTP</th>\\n               <!--  <th>Net-C</th> -->\\n                <th>Vol-Diff</th> \\n                <th class=\\\"sort-arrow\\\" (click)=\\\"putSortBy('strikePrice',!sortDir)\\\">SP</th>\\n              </tr>\\n              <tr *ngIf=\\\"putYesterdayToday == ''\\\">No record found for above search....!</tr>\\n              <tr *ngFor=\\\"let equity of putYesterdayToday;let i = index\\\">\\n                  <td *ngIf=\\\"equity.postionsVol!=='NaN'\\\">{{equity.postionsVol | number:'1.1-1'}}</td>\\n                  <td>{{equity.date| date: 'dd/MM'}}</td>\\n                  <td><label class=\\\"strikethrough\\\">{{equity.oi}}</label>\\n                    <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.oi}}</label>\\n                  </td>\\n                  <td><label class=\\\"strikethrough\\\">{{equity.chnginOI}}</label>\\n                    <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.chnginDif}}</label>\\n                  </td>\\n                  <td><label class=\\\"strikethrough\\\">{{equity.iv | number:'1.1-1'}}</label>\\n                    <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.iv | number:'1.1-1'}}</label>\\n                  </td>\\n                  <td><label class=\\\"strikethrough\\\">{{equity.ltp | number:'1.1-1'}}</label>\\n                     <!-- <label *ngIf=\\\"equity.prevEquity!==null\\\">{{equity.prevEquity.ltp | number:'1.1-1'}}</label> -->\\n                  </td>\\n                 <!--  <td>{{equity.netChng | number:'1.1-1'}}</td> -->\\n                  <td>{{equity.volume}}</td> \\n                  <td>{{equity.strikePrice}}</td>\\n                </tr>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StockService } from '../service/stock.service';\nimport { Filters } from '../model/Filters';\n\n@Component({\n  selector: 'app-yesterDay-today',\n  templateUrl: './yesterDay-today.html',\n  styleUrls: ['./yesterDay-today.css']\n})\nexport class YesterDayTodayComponent implements OnInit {\n\n  checkBoxFilter: any[] = [];\n  equities: any[] = [];\n  search: any = { strikePrice: null, startDate: null, endDate: null, type: 'CALL' };\n  filtersRequest: Filters[] = [];\n  callYesterdayToday: Object[] = [];\n  putYesterdayToday: Object[] = [];\n  sortDir: boolean;\n\n  constructor(private stockService:StockService) { }\n\n  ngOnInit() {\n    this.getCheckfilter();\n   // this.getYesterdayMinusToday();\n  }\n\n  getCheckfilter() {\n    this.stockService.getFilters(\"equityFilter\").subscribe(data => {\n      this.checkBoxFilter = data;\n    });\n  }\n\n  getYesterdayMinusToday() {\n    this.search.filter = this.filtersRequest;\n    this.stockService.getYesterdayMinusTodayByFilter(this.search)\n      .subscribe(data => {\n        if (this.search.type == 'CALL') {\n          this.callYesterdayToday = data;\n        }\n        else\n          this.putYesterdayToday = data;\n      });\n  }\n\n  getYesterdayMinusTodayCall() {\n    this.search.filter = this.filtersRequest;\n    this.stockService.getYesterdayMinusTodayByFilter(this.search)\n      .subscribe(data => {\n          //this.equities = data;\n          if (this.search.type == 'CALL') {\n            this.callYesterdayToday = data;\n          }\n          else\n            this.putYesterdayToday = data;\n      });\n\n      console.log(\"Calldata--> \" +this.callYesterdayToday);\n      console.log(\"putdata--> \" +this.putYesterdayToday);\n  }\n\n  checkValue(event: any, obj: any, type: any) {\n    this.search.type = type;\n    if (event) {\n      this.filtersRequest.push(obj);\n    } else {\n      this.filtersRequest = this.filtersRequest.filter(item => item !== obj);\n    }\n    this.getYesterdayMinusToday();\n  }\n\n  onDateChange(value: any, isStartDate) {\n    if (isStartDate) {\n      this.search.startDate = value;\n    } else\n      this.search.endDate = value;\n   // this.getEquities();\n   //  this.getYesterdayMinusToday();\n  }\n\n  getData(value: any) {\n    this.search.type = value;\n    this.getYesterdayMinusTodayCall();\n  }\n\n  callSortBy(sortBy, sortDir?) {\n    this.sortDir = sortDir;\n    if (this.sortDir) {\n      this.callYesterdayToday.sort(function (a, b) {\n        return a[sortBy] - b[sortBy];\n      });\n    } else {\n      this.callYesterdayToday.sort(function (a, b) {\n        return b[sortBy] - a[sortBy];\n      });\n    }\n  }\n  putSortBy(sortBy, sortDir?) {\n    this.sortDir = sortDir;\n    if (this.sortDir) {\n      this.putYesterdayToday.sort(function (a, b) {\n        return a[sortBy] - b[sortBy];\n      });\n    } else {\n      this.putYesterdayToday.sort(function (a, b) {\n        return b[sortBy] - a[sortBy];\n      });\n    }\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}